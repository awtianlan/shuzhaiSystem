#### Log4j配置 ###
#### 与Spring结合需要在web.xml中指定此文件位置，并添加监听器 ###
##定义log4j的输出级别和输出目的地（目的地可以自定义名称，和后面的对应）
##[ level ] , appenderName1 , appenderName2
#log4j.rootLogger=INFO, CONSOLE ,file
#
##-----------------------------------#
##1 定义日志输出目的地为控制台
#log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
#log4j.appender.CONSOLE.Target = System.out
#log4j.appender.CONSOLE.Threshold=DEBUG
#####可以灵活地指定日志输出格式，下面一行是指定具体的格式 ###
##%c: 输出日志信息所属的类目，通常就是所在类的全名
##%m: 输出代码中指定的消息,产生的日志具体信息
##%n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行
#log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#log4j.appender.CONSOLE.layout.ConversionPattern=[%c]-%m%n
#
##-----------------------------------#
##2 文件大小到达指定尺寸的时候产生一个新的文件
#log4j.appender.file = org.apache.log4j.RollingFileAppender
##日志文件输出目录
#log4j.appender.file.File=E:/logs/ssm.log
##定义文件最大大小
#log4j.appender.file.MaxFileSize=10mb
####输出日志信息###
##最低级别
#log4j.appender.file.Threshold=DEBUG
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=[%p][%d{yy-MM-dd}][%c]%m%n
#
##-----------------------------------#
##3 druid
#log4j.logger.druid.sql=DEBUG
#log4j.logger.druid.sql.DataSource=DEBUG
#log4j.logger.druid.sql.Connection=DEBUG
#log4j.logger.druid.sql.Statement=DEBUG
#log4j.logger.druid.sql.ResultSet=DEBUG
#
##4 mybatis 显示SQL语句部分
#log4j.logger.org.mybatis=DEBUG
#log4j.logger.com.ssm.dao=DEBUG
#log4j.logger.org.mybatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.org.mybatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.org.mybatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#log4j.logger.java.sql.Connection=DEBUG
#log4j.logger.java.sql=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.ResultSet=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG
#定义LOG输出级别
log4j.rootLogger=INFO,Console,File

#定义日志输出目的地为控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
#可以灵活的指定日志输出格式，下面一行是指定具体的格式
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%c]-%m%n

#mybatis显示SQL语句日志配置
log4j.logger.org.mybatis=DEBUG
#log4j.logger.com.ssm.dao=DEBUG


#文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.File=org.apache.log4j.RollingFileAppender
#指定输出目录
log4j.appender.File.File=E:/logs/ssm.log
#定义文件最大大小
log4j.appender.File.MaxFileSize=10MB
#输出所有日志，如果换成DEBUG表示输出DEBUG以上级别日志
log4j.appender.File.Threshold=ALL
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH\:mm|\:ss}][%c]%m%n
###############Log4j 4 SQL Output start#################
log4j.logger.com.ssm.dao=DEBUG
log4j.logger.com.springframework=DEBUG
log4j.logger.com.ibatis=DEBUG  
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG  
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG  
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG  
log4j.logger.java.sql.Connection=DEBUG  
log4j.logger.java.sql.Statement=DEBUG  
log4j.logger.java.sql.PreparedStatement=DEBUG  
log4j.logger.java.sql.ResultSet=DEBUG
log4j.logger.org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl=DEBUG
log4j.logger.java.sql=DEBUG,Console 
###############Log4j 4 SQL Output end###################
